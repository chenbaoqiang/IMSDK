// ************************************************************************************
//  NOTICE: This File Generated By Tools. DO NOT Modify. Copyright (c) Interrcs.com
// ************************************************************************************

#include <jni.h>
/* Header for class com_interrcs_sdk_RcsApi */

#ifndef _Included_com_interrcs_sdk_RcsApi
#define _Included_com_interrcs_sdk_RcsApi
#ifdef __cplusplus
extern "C" {
#endif

JNIEXPORT jlong JNICALL Java_com_interrcs_sdk_RcsApi_nativeStartState(JNIEnv *env, jclass cls, jlong state);

JNIEXPORT jlong JNICALL Java_com_interrcs_sdk_RcsApi_nativeNewState(JNIEnv *env, jclass cls, jstring number, jstring imei,
    jstring imsi, jstring devicevendor, jstring devicemodel, jstring deviceos, jstring deviceosversion,
    jstring clientvendor, jstring clientversion, jstring storage, jstring appid, jstring syspath);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpinvitemember(JNIEnv *env, jclass cls, jlong state, jstring group_uri, jstring target);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativesetnotifyread(JNIEnv *env, jclass cls, jlong state, jstring msg_imdn_id);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativemsgsendreport(JNIEnv *env, jclass cls, jlong state, jstring number, jstring msg_imdn_id, jint report_type, jint directed_type, jstring target);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativedisablepush(JNIEnv *env, jclass cls, jlong state);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativeprovision(JNIEnv *env, jclass cls, jlong state, jstring username, jstring pwd);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpquit(JNIEnv *env, jclass cls, jlong state, jstring group_uri);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativeusersetbdflag(JNIEnv *env, jclass cls, jlong state, jint buddyflag);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativedeviceremove(JNIEnv *env, jclass cls, jlong state, jstring uid);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativeusersetdnd(JNIEnv *env, jclass cls, jlong state, jint dndflag);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpdelete(JNIEnv *env, jclass cls, jlong state, jstring group_uri);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativebuddydel(JNIEnv *env, jclass cls, jlong state, jint userId);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpreject(JNIEnv *env, jclass cls, jlong state, jstring group_uri, jstring inviter);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegetconvhistory(JNIEnv *env, jclass cls, jlong state, jint conv_type, jstring conv_id, jint page_limit, jstring begin_imdn_id);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativefetchsharefile(JNIEnv *env, jclass cls, jlong state, jstring target_id, jstring message_id, jstring file_id, jstring share_file_id, jint start, jint file_size, jstring file_path);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativedeviceadd(JNIEnv *env, jclass cls, jlong state, jstring uid, jstring password);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativelogin(JNIEnv *env, jclass cls, jlong state, jstring username, jstring password);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpmodifynickname(JNIEnv *env, jclass cls, jlong state, jstring group_uri, jstring nickName);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegetuserstates(JNIEnv *env, jclass cls, jlong state);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegetconvlist(JNIEnv *env, jclass cls, jlong state);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativeusersetpermissionuidflag(JNIEnv *env, jclass cls, jlong state, jint uidflag);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativebklistadd(JNIEnv *env, jclass cls, jlong state, jstring uid);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativemsgfetchfile(JNIEnv *env, jclass cls, jlong state, jstring number, jstring message_id, jint chat_type, jstring file_path, jint content_type, jstring file_name, jstring transfer_id, jint start, jint file_size, jstring hash, jint is_burn);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegetsmscode(JNIEnv *env, jclass cls, jlong state, jstring number);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpmodifysubject(JNIEnv *env, jclass cls, jlong state, jstring group_uri, jstring subject);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativeusergetportrait(JNIEnv *env, jclass cls, jlong state, jint userId, jint isSmall);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpmodifybulletin(JNIEnv *env, jclass cls, jlong state, jstring group_uri, jstring bulletin);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpapproval(JNIEnv *env, jclass cls, jlong state, jstring group_uri, jstring applicant, jint handle_result, jstring reply_msg);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativemsgsendfile(JNIEnv *env, jclass cls, jlong state, jstring number, jstring message_id, jstring file_path, jint content_type, jstring file_name, jint need_report, jint start, jstring thumbnail, jint is_burn, jint directed_type, jint need_read_report, jstring extension);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativeresume(JNIEnv *env, jclass cls, jlong state);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativeusergetprofile(JNIEnv *env, jclass cls, jlong state, jstring user);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpsearch(JNIEnv *env, jclass cls, jlong state, jstring subject);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativemsgsendfileex(JNIEnv *env, jclass cls, jlong state, jstring number, jstring message_id, jstring file_path, jint content_type, jstring file_name, jint need_report, jint start, jstring thumbnail, jint duration, jint is_burn, jint directed_type, jint need_read_report, jstring extension);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativeusersetprofile(JNIEnv *env, jclass cls, jlong state, jstring nickname, jstring impresa, jstring firstname, jstring lastname, jint gender, jstring email, jstring birthday, jstring client_extra);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegetpresence(JNIEnv *env, jclass cls, jlong state, jstring contact_id);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativemsg2shorturl(JNIEnv *env, jclass cls, jlong state, jstring messageid, jint msgtype, jstring content, jstring filepath);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpcreate(JNIEnv *env, jclass cls, jlong state, jstring resourcelists, jstring subject, jstring introduce, jstring bulletin, jint grouptype);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativesubpresence(JNIEnv *env, jclass cls, jlong state, jstring cids);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativecapsexchange(JNIEnv *env, jclass cls, jlong state, jstring user);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpsublist(JNIEnv *env, jclass cls, jlong state, jstring version);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativedevicestatusget(JNIEnv *env, jclass cls, jlong state, jstring uid);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegetsharefilelist(JNIEnv *env, jclass cls, jlong state, jstring target_id);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativeonbell(JNIEnv *env, jclass cls, jlong state, jstring name, jint timeout);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativemsgsetconvstatus(JNIEnv *env, jclass cls, jlong state, jstring conv_id, jstring msg_imdn_id, jint convstate, jint chat_type);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativesetendpointdnd(JNIEnv *env, jclass cls, jlong state, jint flag, jstring begintime, jstring endtime);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativelogout(JNIEnv *env, jclass cls, jlong state);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativecanceltransfer(JNIEnv *env, jclass cls, jlong state, jstring message_id);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativebootendpoint(JNIEnv *env, jclass cls, jlong state, jstring client_id, jint client_type, jstring client_version);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpsubinfo(JNIEnv *env, jclass cls, jlong state, jstring group_uri, jstring info_version, jstring members_version);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpremovemember(JNIEnv *env, jclass cls, jlong state, jstring group_uri, jstring target);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativestop(JNIEnv *env, jclass cls, jlong state);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativeusergetinfo(JNIEnv *env, jclass cls, jlong state, jstring ids);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativebklistget(JNIEnv *env, jclass cls, jlong state);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativebklistremove(JNIEnv *env, jclass cls, jlong state, jstring uid);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativemsgsendtext(JNIEnv *env, jclass cls, jlong state, jstring number, jstring message_id, jstring content, jint need_report, jint is_burn, jint directed_type, jint need_read_report, jstring extension, jint content_type);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativeunsubpresence(JNIEnv *env, jclass cls, jlong state, jstring cids);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpjoin(JNIEnv *env, jclass cls, jlong state, jstring group_uri, jstring inviter);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativemsggpsendtext(JNIEnv *env, jclass cls, jlong state, jstring group_uri, jstring message_id, jstring content, jint need_report, jstring ccNumber, jint need_read_report, jstring extension, jint content_type);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpsetdnd(JNIEnv *env, jclass cls, jlong state, jstring group_uri, jint flag);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativeprovisiondm(JNIEnv *env, jclass cls, jlong state, jstring number, jstring token);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativesetpushbadge(JNIEnv *env, jclass cls, jlong state, jint badge);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativedeleteendpoint(JNIEnv *env, jclass cls, jlong state, jstring client_id, jint client_type, jstring client_version);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegetendpointlist(JNIEnv *env, jclass cls, jlong state);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativemsggpsendfile(JNIEnv *env, jclass cls, jlong state, jstring group_uri, jstring message_id, jstring file_path, jint content_type, jstring file_name, jint need_report, jint start, jstring thumbnail, jint need_read_report, jstring extension);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativesetpush(JNIEnv *env, jclass cls, jlong state, jstring token, jint server_type, jint show_preview);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativebuddyhandle(JNIEnv *env, jclass cls, jlong state, jint userId, jint accept, jstring reason);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpchangemanager(JNIEnv *env, jclass cls, jlong state, jstring group_uri, jstring target);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativedoconnect(JNIEnv *env, jclass cls, jlong state, jint disconnect);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpshareinfo(JNIEnv *env, jclass cls, jlong state, jstring group_uri);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativebuddydnd(JNIEnv *env, jclass cls, jlong state, jint userId, jint dnd_flag);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativebuddymemo(JNIEnv *env, jclass cls, jlong state, jint userId, jstring memo);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativebuddyadd(JNIEnv *env, jclass cls, jlong state, jstring user, jstring reason);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativeusersetportrait(JNIEnv *env, jclass cls, jlong state, jstring file_path);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativeusersetpermissionunameflag(JNIEnv *env, jclass cls, jlong state, jint unameflag);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpapply(JNIEnv *env, jclass cls, jlong state, jstring group_uri, jstring remark);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpmodifyinviteflag(JNIEnv *env, jclass cls, jlong state, jstring group_uri, jint flag);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegetfileid(JNIEnv *env, jclass cls, jlong state, jstring filename);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativeprovisionotp(JNIEnv *env, jclass cls, jlong state, jstring smscode, jstring username, jstring otp, jstring sessid);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativedevicelistget(JNIEnv *env, jclass cls, jlong state);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativedeletesharefile(JNIEnv *env, jclass cls, jlong state, jstring target_id, jstring file_id, jstring share_file_id);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativeuploadsharefile(JNIEnv *env, jclass cls, jlong state, jstring target_id, jstring message_id, jstring file_path, jstring file_name, jint expire);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativetoken(JNIEnv *env, jclass cls, jlong state);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativemsgsetstatus(JNIEnv *env, jclass cls, jlong state, jstring number, jstring msg_imdn_id, jint msgstate, jint chat_type);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpmodifyintroduce(JNIEnv *env, jclass cls, jlong state, jstring group_uri, jstring introduce);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativesuspend(JNIEnv *env, jclass cls, jlong state);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativegpmodifyextra(JNIEnv *env, jclass cls, jlong state, jstring group_uri, jstring extra);

JNIEXPORT jint JNICALL Java_com_interrcs_sdk_RcsApi_nativeprovisioniot(JNIEnv *env, jclass cls, jlong state, jstring username, jstring pwd);

#ifdef __cplusplus
}
#endif
#endif
